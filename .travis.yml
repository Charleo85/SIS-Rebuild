# Credits to @samuelhavron
sudo: required
dist: trusty # google-cloud-engine mod of ubuntu 14.04.3 LTS
language: python
python:
  - "3.5"
cache:
  - pip3

# if specific versions of docker or docker-compose are needed, see travis-CI docs
services:
  - docker # default is docker 1.8.2 and docker-compose 1.4.2 (as of Oct. 2016)

notifications:
  slack: cs4501-isa:8PZbPGWlRGRcJOHou2DzuQ02

install: # prepare mySQL database
  - docker pull mysql:5.7.14
  - mkdir db
  - >
    docker run --name mysql -d -e MYSQL_ROOT_PASSWORD='$3cureUS'
    -v `pwd`/db:/var/lib/mysql mysql:5.7.14
  - sleep 15 # need to give time for mysql to start
  - >
    docker run -it --name mysql-cmd --rm --link mysql:db mysql:5.7.14
    mysql -uroot -p'$3cureUS' -h db -v -e
    "CREATE DATABASE cs4501 CHARACTER SET utf8;
    CREATE USER 'www'@'%' IDENTIFIED BY '\$3cureUS';
    GRANT ALL PRIVILEGES ON *.* TO 'www'@'%';"
before_script:
  - docker-compose up -d
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start" # X Virtual Framebuffer to imitate a display
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - # install chrome for selenium
  - sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
  - sudo apt-get update
  - sudo apt-get install google-chrome-stable
  - sleep 60 # need to give time for containers and xvfb to start

script:
  - >
    docker exec -it models bash -c
    "pip install -r requirement.txt && ./manage.py test"
    # run Django unit tests on models
  - >
    docker exec -it exp bash -c
    "pip install -r requirement.txt && ./manage.py test"
    # run Django unit tests on exp
  - >
    pip3 install -r requirement.txt && python3 test_front_end.py
    # run selenium front end tests with xvfb
after_success:

after_script:
  - docker-compose stop
  - docker stop mysql
  - docker rm `docker ps -a -q`
  - docker rmi `docker images -q`
  - rm -rf db
